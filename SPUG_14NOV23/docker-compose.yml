version: "3.8"

services:
  app:
    image: demo-app
    container_name: demo-app
    build:
      context: .
      dockerfile: .docker/Dockerfile.app
    ports:
      - 3000:3000
    networks:
      - demo-network
    volumes:
      - ./app/src:/home/user/code/app/src
      - ./app/vite.config.js:/home/user/code/app/vite.config.js
      - ./app/package.json:/home/user/code/app/package.json
  nginx:
    image: demo-nginx
    container_name: demo-nginx
    build:
      context: .
      dockerfile: .docker/Dockerfile.nginx
    volumes:
      - ./.nginx/conf.d:/etc/nginx/conf.d
      - ./app/build:/app/build
    depends_on:
      - cherrypy
    network_mode: host
  cherrypy:
    image: demo-cherrypy
    container_name: demo-cherrypy
    build:
      context: .
      dockerfile: .docker/Dockerfile.api
      args:
        FRAMEWORK: cherrypy
    ports:
      - 8080:8080
    volumes:
      - ./cherrypy:/home/user/code/api
    networks:
      - demo-network
    env_file:
      - .env/redis.env
  fastapi:
    image: demo-fastapi
    container_name: demo-fastapi
    build:
      context: .
      dockerfile: .docker/Dockerfile.api
      args:
        FRAMEWORK: fastapi
    ports:
      - 8081:8000
    volumes:
      - ./fastapi:/home/user/code/api
    networks:
      - demo-network
    env_file:
      - .env/redis.env
  flask:
    image: demo-flask
    container_name: demo-flask
    build:
      context: .
      dockerfile: .docker/Dockerfile.api
      args:
        FRAMEWORK: flask
    ports:
      - 8082:8080
    volumes:
      - ./flask:/home/user/code/api
    networks:
      - demo-network
    env_file:
      - .env/redis.env
  redis:
    container_name: demo-redis
    image: redis:latest
    build:
      context: .
      dockerfile: .docker/Dockerfile.redis
    networks:
      - demo-network
    ports:
      - 6379:6379
    env_file:
      - .env/redis.env
networks:
  demo-network:
    name: demo-network
    driver: bridge

